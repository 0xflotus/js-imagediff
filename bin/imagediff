#!/usr/bin/env node
var imagediff = require('../imagediff.js'),
    Canvas = require('canvas');

commandLine(process.argv.slice(2));

// CLI Parsing/Output
function commandLine (args) {

  if (args.length < 3) {
    console.log("Invalid parameters:");
    console.log("imagediff [-e|equal] [-t|tolerance TOLERANCE] FILE_A FILE_B")
    console.log("imagediff [-d|diff] FILE_A FILE_B OUTPUT_FILE")
  } else {

    var
      a = new Canvas.Image(),
      b = new Canvas.Image(),
      t = 0,
      i, fn, result, output;

    for (i = args.length - 2; i--;) {
      switch (args[i]) {
        case '-d':
        case 'diff':
          fn = 'diff';
          break;
        case '-e':
        case 'equal':
          fn = 'equal';
          break;
        case '-t':
        case 'tolerance':
          t = args[i + 1];
          break;
      }
    }

    if (fn === 'diff') {
      output = args.pop();
    }
    b.src = args.pop();
    a.src = args.pop();
    a = imagediff.toImageData(a);
    b = imagediff.toImageData(b);

    result = imagediff[fn](a, b, t);

    if (fn === 'equal') {
      process.stdout.write(result ? 'equal' : 'not equal');
    } else if (fn === 'diff') {
      imageDataToPNG(result, output);
    }
  }
};
function imageDataToPNG (imageData, outputFile) {

  var
    canvas = imagediff.createCanvas(imageData.width, imageData.height),
    context = canvas.getContext('2d'),
    base64Data,
    decodedImage;

  context.putImageData(imageData, 0, 0);
  base64Data = canvas.toDataURL().replace(/^data:image\/\w+;base64,/,"");
  decodedImage = new Buffer(base64Data, 'base64');
  require('fs').writeFile(outputFile, decodedImage, function(E) {
    if (E) console.log(E);
  });
}
