/*! imagediff.js 1.0.1
  * (c) 2011 Carl Sutherland, Humble Software Development
  * imagediff.js is freely distributable under the MIT license.
  * Thanks to Jacob Thornton for the node/amd integration bits.
  * For details and documentation:
  * https://github.com/HumbleSoftware/js-imagediff
  */
(function(a,b){var c=this;typeof module!="undefined"?module.exports=b():typeof define=="function"&&typeof define.amd=="object"?define(b):c[a]=b(c,a)})("imagediff",function(a,b){function H(a,b){a=document.createElement(a),a&&b&&(a.innerHTML=b);return a}function G(){var a;for(a=0;a<arguments.length;a++)if(!s(arguments[a]))throw{name:"ImageTypeError",message:"Submitted object was not an image."}}function F(a,b){function r(a){i=Math.floor((c-a.height)/2),j=Math.floor((d-a.width)/2)}var c=Math.max(a.height,b.height),d=Math.max(a.width,b.width),e=n(d,c),f=a.data,g=b.data,h=e.data,i,j,k,l,m,o,p,q;for(m=h.length-1;m>0;m=m-4)h[m]=255;r(a);for(k=a.height;k--;)for(l=a.width;l--;)m=4*((k+i)*d+(l+j)),o=4*(k*a.width+l),h[m+0]=f[o+0],h[m+1]=f[o+1],h[m+2]=f[o+2];r(b);for(k=b.height;k--;)for(l=b.width;l--;)m=4*((k+i)*d+(l+j)),o=4*(k*b.width+l),h[m+0]=Math.abs(h[m+0]-g[o+0]),h[m+1]=Math.abs(h[m+1]-g[o+1]),h[m+2]=Math.abs(h[m+2]-g[o+2]);return e}function E(a,b){var c=a.height,d=a.width,e=n(d,c),f=a.data,g=b.data,h=e.data,i=h.length,j,k,l,m,o,p;for(l=0;l<i;l+=4)h[l]=Math.abs(f[l]-g[l]),h[l+1]=Math.abs(f[l+1]-g[l+1]),h[l+2]=Math.abs(f[l+2]-g[l+2]),h[l+3]=Math.abs(255-f[l+3]-g[l+3]);return e}function D(a,b){return(B(a,b)?E:F)(a,b)}function C(a,b){var c=a.data,d=b.data,e=c.length,f;if(!B(a,b))return!1;for(f=e;f--;)if(c[f]!==d[f])return!1;return!0}function B(a,b){return A(a,b)&&z(a,b)}function A(a,b){return a.height===b.height}function z(a,b){return a.width===b.width}function y(a){var b=a.canvas,c=b.height,d=b.width;return a.getImageData(0,0,d,c)}function x(a){var b=a.height,c=a.width,d=a.getContext("2d");return d.getImageData(0,0,c,b)}function w(a){var b=a.height,c=a.width;h.width=c,h.height=b,i.clearRect(0,0,c,b),i.drawImage(a,0,0);return i.getImageData(0,0,c,b)}function v(a){if(o(a))return w(a);if(p(a))return x(a);if(q(a))return y(a);if(r(a))return a}function u(a){var b=a.height,c=a.width;h.width=c,h.height=b,i.putImageData(a,0,0);return i.getImageData(0,0,c,b)}function t(a,b){return typeof a=="object"&&Object.prototype.toString.apply(a)===b}function s(a){return o(a)||p(a)||q(a)||r(a)}function r(a){return t(a,g)}function q(a){return t(a,e)}function p(a){return t(a,d)}function o(a){return t(a,f)}function n(a,b){h.width=a,h.height=b,i.clearRect(0,0,a,b);return i.createImageData(a,b)}function m(){var a=document.createElement("canvas");return a}var c="[object Array]",d="[object HTMLCanvasElement]",e="[object CanvasRenderingContext2D]",f="[object HTMLImageElement]",g="[object ImageData]",h=m(),i=h.getContext("2d"),j=a[b],k,l;l={toBeImageData:function(){return k.isImageData(this.actual)},toImageDiffEqual:function(a){this.message=function(){var b=H("div"),c=H("div","<div>Actual:</div>"),d=H("div","<div>Expected:</div>"),e=H("div","<div>Diff:</div>"),f=k.diff(this.actual,a),g=m(),h;g.height=f.height,g.width=f.width,h=g.getContext("2d"),h.putImageData(f,0,0),c.appendChild(this.actual),d.appendChild(a),e.appendChild(g),b.appendChild(c),b.appendChild(d),b.appendChild(e);return[b,"Expected not to be equal."]};return k.equal(this.actual,a)}},k={createCanvas:m,createImageData:n,isImage:o,isCanvas:p,isContext:q,isImageData:r,isImageType:s,toImageData:function(a){G(a);return r(a)?u(a):v(a)},equal:function(a,b){G(a,b),a=v(a),b=v(b);return C(a,b)},diff:function(a,b){G(a,b),a=v(a),b=v(b);return D(a,b)},jasmine:l,noConflict:function(){a[b]=j;return k}};return k})